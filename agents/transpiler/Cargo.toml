[package]
name = "portalis-transpiler"
version.workspace = true
edition.workspace = true
license.workspace = true
authors.workspace = true
description = "Python to Rust transpiler engine with WASM compilation support"
repository.workspace = true
homepage.workspace = true
keywords.workspace = true
categories.workspace = true
readme = "../../README.md"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
anyhow.workspace = true
serde.workspace = true
serde_json.workspace = true
thiserror.workspace = true
urlencoding = "2.1"
uuid = { version = "1.6", features = ["v4", "serde"] }
num_cpus = "1.16"
parking_lot = "0.12"
crossbeam = "0.8"
once_cell = "1.19"
instant = "0.1"
petgraph = "0.6"
semver = { version = "1.0", features = ["serde"] }
rustpython-parser.workspace = true

# Non-WASM dependencies
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
portalis-core = { version = "0.1.0", path = "../../core" }
portalis-nemo-bridge = { version = "0.1.0", path = "../nemo-bridge", optional = true }
portalis-cpu-bridge = { version = "0.1.0", path = "../cpu-bridge", features = ["acceleration"], optional = true }
tokio.workspace = true
async-trait.workspace = true
tracing.workspace = true
reqwest = { version = "0.12", features = ["json", "rustls-tls"], default-features = false }
# WebSocket support
tokio-tungstenite = { version = "0.21", features = ["native-tls"] }
futures-util = "0.3"
# Threading for worker pools
rayon = "1.8"
# Platform-specific threading utilities
libc = "0.2"

# WASM-specific dependencies
[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = { version = "0.2", optional = true }
wasm-bindgen-futures = { version = "0.4", optional = true }
js-sys = { version = "0.3", optional = true }
web-sys = { version = "0.3", features = ["console", "Request", "RequestInit", "RequestMode", "RequestRedirect", "Response", "Headers", "Window", "WebSocket", "MessageEvent", "ErrorEvent", "CloseEvent", "BinaryType", "Blob", "Worker", "Url", "BlobPropertyBag"], optional = true }
console_error_panic_hook = { version = "0.1", optional = true }
serde-wasm-bindgen = { version = "0.6", optional = true }
futures-channel = { version = "0.3", optional = true }
# WASI support for filesystem operations
wasi = { version = "0.11", optional = true }
# HTTP support for WASI
reqwest = { version = "0.11", features = ["json"], default-features = false, optional = true }
tokio = { workspace = true, optional = true }

[features]
default = []
nemo = ["portalis-nemo-bridge"]
acceleration = ["portalis-cpu-bridge"]
wasm = ["wasm-bindgen", "wasm-bindgen-futures", "js-sys", "web-sys", "console_error_panic_hook", "serde-wasm-bindgen", "futures-channel"]
wasi = ["dep:wasi", "tokio"]

[dev-dependencies]
tokio = { workspace = true, features = ["test-util"] }
wiremock = "0.6"

[[bench]]
name = "translation_benchmark"
harness = false

[[example]]
name = "translate_file"
path = "examples/translate_file.rs"

[[example]]
name = "websocket_example"
path = "examples/websocket_example.rs"
